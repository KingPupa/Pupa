# (paste the code above, save and exit with CTRL+O, CTRL+X)

chmod +x ~/project_tb/shortcuts#!/data/data/com.termux/files/usr/bin/bash
# ==================== Smart Trading Bot Menu ====================

PROJECT_DIR=~/project_tb
DEMO_BOT=$PROJECT_DIR/quotex_demo_bot.py
TELEGRAM=$PROJECT_DIR/quotex_demo_telegram.py
DASHBOARD=$PROJECT_DIR/dashboard.sh
MINI_STATS=$PROJECT_DIR/mini_live_stats.sh

show_menu() {
    clear
    # Bot status indicators
    DEMO_STATUS=$(pgrep -f quotex_demo_bot.py >/dev/null && echo "✅" || echo "❌")
    TELE_STATUS=$(pgrep -f quotex_demo_telegram.py >/dev/null && echo "✅" || echo "❌")
    MINI_STATUS=$(pgrep -f mini_live_stats.sh >/dev/null && echo "✅" || echo "❌")
    echo "================ Mini Live Stats ================"
    if [ -f $PROJECT_DIR/balance.txt ]; then
        BAL=$(cat $PROJECT_DIR/balance.txt)
    else
        BAL=0
    fi
    if [ -f $PROJECT_DIR/profit.txt ]; then
        PROF=$(cat $PROJECT_DIR/profit.txt)
    else
        PROF=0
    fi
    WINS=$(cat $PROJECT_DIR/wins.txt 2>/dev/null || echo 0)
    LOSSES=$(cat $PROJECT_DIR/losses.txt 2>/dev/null || echo 0)
    echo "Balance: $BAL | Profit: $PROF | Wins: $WINS | Losses: $LOSSES"
    echo "Bot Status: Demo $DEMO_STATUS | Telegram $TELE_STATUS | Mini Stats $MINI_STATUS"
    echo "================================================"
    echo "============================"
    echo " Smart Trading Bot - Menu"
    echo "============================"
    echo "1) Start Demo"
    echo "2) Stop Bot"
    echo "3) Restart Demo"
    echo "4) Status"
    echo "5) Open Full Dashboard"
    echo "6) Launch Mini Live Stats"
    echo "7) Exit"
    echo "----------------------------"
    read -p "Select option [1-7]: " opt

    case "$opt" in
        1)
            echo "Starting Demo bot + Telegram listener..."
            nohup python3 $DEMO_BOT >/dev/null 2>&1 &
            nohup python3 $TELEGRAM >/dev/null 2>&1 &
            sleep 2
            ;;
        2)
            echo "Stopping all bots..."
            pkill -f quotex_demo_bot.py
            pkill -f quotex_demo_telegram.py
            pkill -f mini_live_stats.sh
            sleep 1
            ;;
        3)
            echo "Restarting Demo bot..."
            pkill -f quotex_demo_bot.py
            pkill -f quotex_demo_telegram.py
            sleep 1
            nohup python3 $DEMO_BOT >/dev/null 2>&1 &
            nohup python3 $TELEGRAM >/dev/null 2>&1 &
            sleep 2
            ;;
        4)
            echo "Checking bot status..."
            ;;
        5)
            echo "Opening Full Dashboard..."
            bash $DASHBOARD
            ;;
        6)
            echo "Launching Mini Live Stats..."
            bash $MINI_STATS
            ;;
        7)
            echo "Exiting..."
            exit 0
            ;;
        *)
            echo "Invalid option!"
            ;;
    esac
}

while true; do
    show_menu
    read -n1 -s -p "Press any key to return to menu..."
done
#!/data/data/com.termux/files/usr/bin/bash
# ==================== Smart Trading Bot Menu (Live + Mini Dashboard) ====================

PROJECT_DIR=~/project_tb
DEMO_BOT=$PROJECT_DIR/quotex_demo_bot.py
TELEGRAM=$PROJECT_DIR/quotex_demo_telegram.py
DASHBOARD=$PROJECT_DIR/dashboard.sh
MINI_STATS=$PROJECT_DIR/mini_live_stats.sh

TRADES_LOG=$PROJECT_DIR/trades.log
SIGNALS_LOG=$PROJECT_DIR/signals.log
BAL_FILE=$PROJECT_DIR/balance.txt
PROF_FILE=$PROJECT_DIR/profit.txt
WINS_FILE=$PROJECT_DIR/wins.txt
LOSSES_FILE=$PROJECT_DIR/losses.txt

# --- Auto cleanup old bots & menu ---
pkill -f quotex_demo_bot.py
pkill -f quotex_demo_telegram.py
pkill -f mini_live_stats.sh
rm -f $PROJECT_DIR/shortcuts
rm -f $PROJECT_DIR/shortcuts.bak
sleep 1

show_menu() {
    clear
    # Bot status indicators
    DEMO_STATUS=$(pgrep -f quotex_demo_bot.py >/dev/null && echo "✅" || echo "❌")
    TELE_STATUS=$(pgrep -f quotex_demo_telegram.py >/dev/null && echo "✅" || echo "❌")
    MINI_STATUS=$(pgrep -f mini_live_stats.sh >/dev/null && echo "✅" || echo "❌")

    # Mini live stats
    BAL=$(cat $BAL_FILE 2>/dev/null || echo 0)
    PROF=$(cat $PROF_FILE 2>/dev/null || echo 0)
    WINS=$(cat $WINS_FILE 2>/dev/null || echo 0)
    LOSSES=$(cat $LOSSES_FILE 2>/dev/null || echo 0)

    echo "======= Mini Live Stats ================"
    echo "Balance: $BAL | Profit: $PROF | Wins: $WINS | Losses: $LOSSES"
    echo "Bot Status: Demo $DEMO_STATUS | Telegram $TELE_STATUS | Mini Stats $MINI_STATUS"
    echo "================================================"
    
    # Last 5 trades
    echo "------------- Last 5 Trades -------------"
    if [ -f $TRADES_LOG ]; then
        tail -n 5 $TRADES_LOG
    else
        echo "No trades yet."
    fi

    # Last 5 signals
    echo "------------- Last 5 Signals ------------"
    if [ -f $SIGNALS_LOG ]; then
        tail -n 5 $SIGNALS_LOG
    else
        echo "No signals yet."
    fi
    echo "========================================"

    # Menu
    echo "============================"
    echo " Smart Trading Bot - Menu"
    echo "============================"
    echo "1) Start Demo"
    echo "2) Stop Bot"
    echo "3) Restart Demo"
    echo "4) Status"
    echo "5) Open Full Dashboard"
    echo "6) Launch Mini Live Stats"
    echo "7) Exit"
    echo "----------------------------"
    echo -n "Select option [1-7]: "
}

while true; do
    show_menu
    # Read input with 5-sec timeout for auto-refresh
    read -t 5 -n1 opt
    if [ -z "$opt" ]; then
        continue  # refresh the menu every 5 seconds
    fi

    case "$opt" in
        1)
            echo "Starting Demo bot + Telegram listener..."
            nohup python3 $DEMO_BOT >/dev/null 2>&1 &
            nohup python3 $TELEGRAM >/dev/null 2>&1 &
            sleep 2
            ;;
        2)
            echo "Stopping all bots..."
            pkill -f quotex_demo_bot.py
            pkill -f quotex_demo_telegram.py
            pkill -f mini_live_stats.sh
            sleep 1
            ;;
        3)
            echo "Restarting Demo bot..."
            pkill -f quotex_demo_bot.py
            pkill -f quotex_demo_telegram.py
            sleep 1
            nohup python3 $DEMO_BOT >/dev/null 2>&1 &
            nohup python3 $TELEGRAM >/dev/null 2>&1 &
            sleep 2
            ;;
        4)
            echo "Checking bot status..."
            sleep 2
            ;;
        5)
            echo "Opening Full Dashboard..."
            bash $DASHBOARD
            ;;
        6)
            echo "Launching Mini Live Stats..."
            bash $MINI_STATS
            ;;
        7)
            echo "Exiting..."
            exit 0
            ;;
        *)
            echo "Invalid option!"
            sleep 1
            ;;
    esac
done
#!/data/data/com.termux/files/usr/bin/bash
# ==================== Smart Trading Bot Menu (Live + Mini Dashboard) ====================

PROJECT_DIR=~/project_tb
DEMO_BOT=$PROJECT_DIR/quotex_demo_bot.py
LIVE_BOT=$PROJECT_DIR/quotex_live_bot.py
TELEGRAM=$PROJECT_DIR/quotex_demo_telegram.py
DASHBOARD=$PROJECT_DIR/dashboard.sh
MINI_STATS=$PROJECT_DIR/mini_live_stats.sh

TRADES_LOG=$PROJECT_DIR/trades.log
SIGNALS_LOG=$PROJECT_DIR/signals.log
BAL_FILE=$PROJECT_DIR/balance.txt
PROF_FILE=$PROJECT_DIR/profit.txt
WINS_FILE=$PROJECT_DIR/wins.txt
LOSSES_FILE=$PROJECT_DIR/losses.txt

# --- Auto cleanup old bots & menu ---
pkill -f quotex_demo_bot.py
pkill -f quotex_live_bot.py
pkill -f quotex_demo_telegram.py
pkill -f mini_live_stats.sh
rm -f $PROJECT_DIR/shortcuts
rm -f $PROJECT_DIR/shortcuts.bak
sleep 1

show_menu() {
    clear
    # Bot status indicators
    DEMO_STATUS=$(pgrep -f quotex_demo_bot.py >/dev/null && echo "✅" || echo "❌")
    LIVE_STATUS=$(pgrep -f quotex_live_bot.py >/dev/null && echo "✅" || echo "❌")
    TELE_STATUS=$(pgrep -f quotex_demo_telegram.py >/dev/null && echo "✅" || echo "❌")
    MINI_STATUS=$(pgrep -f mini_live_stats.sh >/dev/null && echo "✅" || echo "❌")

    # Mini live stats
    BAL=$(cat $BAL_FILE 2>/dev/null || echo 0)
    PROF=$(cat $PROF_FILE 2>/dev/null || echo 0)
    WINS=$(cat $WINS_FILE 2>/dev/null || echo 0)
    LOSSES=$(cat $LOSSES_FILE 2>/dev/null || echo 0)

    echo "======= Mini Live Stats ================"
    echo "Balance: $BAL | Profit: $PROF | Wins: $WINS | Losses: $LOSSES"
    echo "Bot Status: Demo $DEMO_STATUS | Live $LIVE_STATUS | Telegram $TELE_STATUS | Mini Stats $MINI_STATUS"
    echo "================================================"
    
    # Last 5 trades
    echo "------------- Last 5 Trades -------------"
    if [ -f $TRADES_LOG ]; then
        tail -n 5 $TRADES_LOG
    else
        echo "No trades yet."
    fi

    # Last 5 signals
    echo "------------- Last 5 Signals ------------"
    if [ -f $SIGNALS_LOG ]; then
        tail -n 5 $SIGNALS_LOG
    else
        echo "No signals yet."
    fi
    echo "========================================"

    # Menu
    echo "============================"
    echo " Smart Trading Bot - Menu"
    echo "============================"
    echo "1) Start Demo"
    echo "2) Start Live"
    echo "3) Stop Bot"
    echo "4) Restart Demo"
    echo "5) Status"
    echo "6) Open Full Dashboard"
    echo "7) Launch Mini Live Stats"
    echo "8) Exit"
    echo "----------------------------"
    echo -n "Select option [1-8]: "
}

while true; do
    show_menu
    # Read input with 5-sec timeout for auto-refresh
    read -t 5 -n1 opt
    if [ -z "$opt" ]; then
        continue  # refresh the menu every 5 seconds
    fi

    case "$opt" in
        1)
            echo "Starting Demo bot + Telegram listener..."
            nohup python3 $DEMO_BOT >/dev/null 2>&1 &
            nohup python3 $TELEGRAM >/dev/null 2>&1 &
            sleep 2
            ;;
        2)
            echo "Starting Live bot + Telegram listener..."
            nohup python3 $LIVE_BOT >/dev/null 2>&1 &
            nohup python3 $TELEGRAM >/dev/null 2>&1 &
            sleep 2
            ;;
        3)
            echo "Stopping all bots..."
            pkill -f quotex_demo_bot.py
            pkill -f quotex_live_bot.py
            pkill -f quotex_demo_telegram.py
            pkill -f mini_live_stats.sh
            sleep 1
            ;;
        4)
            echo "Restarting Demo bot..."
            pkill -f quotex_demo_bot.py
            pkill -f quotex_demo_telegram.py
            sleep 1
            nohup python3 $DEMO_BOT >/dev/null 2>&1 &
            nohup python3 $TELEGRAM >/dev/null 2>&1 &
            sleep 2
            ;;
        5)
            echo "Checking bot status..."
            sleep 2
            ;;
        6)
            echo "Opening Full Dashboard..."
            bash $DASHBOARD
            ;;
        7)
            echo "Launching Mini Live Stats..."
            bash $MINI_STATS
            ;;
        8)
            echo "Exiting..."
            exit 0
            ;;
        *)
            echo "Invalid option!"
            sleep 1
            ;;
    esac
done
#!/bin/bash
# Smart Trading Bot Menu with Auto-Delete + Blinking Indicator

BOT_DIR=~/project_tb
DEMO_BOT=$BOT_DIR/quotex_demo_bot.py
TELEGRAM_BOT=$BOT_DIR/quotex_demo_telegram.py
PID_FILE=$BOT_DIR/bot.pid
SHORTCUTS=$BOT_DIR/shortcuts

# Always remove old menu to avoid conflicts
if [ -f "$SHORTCUTS" ]; then
    rm -f "$SHORTCUTS"
fi

# Detect if bot is running
is_running() {
    if pgrep -f "quotex_demo_bot.py" > /dev/null || pgrep -f "quotex_demo_telegram.py" > /dev/null; then
        return 0
    else
        return 1
    fi
}

# Colors
RED="\e[31m"
GREEN="\e[32m"
RESET="\e[0m"

blink_state=0

while true; do
    clear
    echo "============================"
    echo " Smart Trading Bot - Menu"
    echo "============================"

    # Status indicator (blinking green if running, steady red if stopped)
    if is_running; then
        if [ $blink_state -eq 0 ]; then
            echo -e "Bot Status: ${GREEN}🟢 RUNNING${RESET}"
            blink_state=1
        else
            echo -e "Bot Status: ${GREEN}   ${RESET}"
            blink_state=0
        fi
    else
        echo -e "Bot Status: ${RED}🔴 STOPPED${RESET}"
    fi

    echo "----------------------------"
    echo "1) Start Demo"
    echo "2) Stop Bot"
    echo "3) Restart Demo"
    echo "4) Status"
    echo "5) Open Full Dashboard"
    echo "6) Launch Mini Live Stats"
    echo "7) Exit"
    echo "----------------------------"
    read -p "Select option [1-7]: " choice

    case $choice in
        1) echo "Starting Demo bot + Telegram listener..."
           python3 $DEMO_BOT & echo $! > $PID_FILE
           python3 $TELEGRAM_BOT & echo $! >> $PID_FILE
           sleep 2
           ;;
        2) echo "Stopping all bots..."
           pkill -f quotex_demo_bot.py
           pkill -f quotex_demo_telegram.py
           rm -f $PID_FILE
           sleep 2
           ;;
        3) echo "Restarting Demo bot..."
           pkill -f quotex_demo_bot.py
           pkill -f quotex_demo_telegram.py
           rm -f $PID_FILE
           sleep 2
           python3 $DEMO_BOT & echo $! > $PID_FILE
           python3 $TELEGRAM_BOT & echo $! >> $PID_FILE
           ;;
        4) echo "Checking status..."
           if is_running; then
               echo "Bot is running."
           else
               echo "Bot is stopped."
           fi
           read -n 1 -s -r -p "Press any key to continue..."
           ;;
        5) bash $BOT_DIR/dashboard.sh ;;
        6) bash $BOT_DIR/mini_live_stats.sh ;;
        7) echo "Exiting..."
           exit 0 ;;
        *) echo "Invalid choice"; sleep 1 ;;
    esac
done
#!/bin/bash

blink_state=0

while true; do
    clear
    echo "============================"
    echo " Smart Trading Bot - Menu"
    echo "============================"

    # Demo bot status (blinking green if running)
    if pgrep -f quotex_demo_bot.py > /dev/null; then
        if [ $blink_state -eq 0 ]; then
            demo_status="🟢"
            blink_state=1
        else
            demo_status="  "
            blink_state=0
        fi
    else
        demo_status="🔴"
    fi

    # Telegram listener status
    if pgrep -f quotex_demo_telegram.py > /dev/null; then
        tele_status="✅"
    else
        tele_status="❌"
    fi

    echo "Bot Status: Demo $demo_status | Telegram $tele_status"
    echo "--------------------------------------------"
    echo "1) Start Demo"
    echo "2) Stop Bot"
    echo "3) Restart Demo"
    echo "4) Status"
    echo "5) Open Full Dashboard"
    echo "6) Launch Mini Live Stats"
    echo "7) Exit"
    echo "--------------------------------------------"
    echo -n "Select option [1-7]: "

    # Read with 1 second timeout (so blink refreshes)
    read -t 1 -n 1 option
    if [[ -n "$option" ]]; then
        echo ""  # line break
        case $option in
            1) echo "Starting Demo bot + Telegram listener..."; python ~/project_tb/quotex_demo_bot.py & python ~/project_tb/quotex_demo_telegram.py & ;;
            2) echo "Stopping all bots..."; pkill -f quotex_demo_bot.py; pkill -f quotex_demo_telegram.py ;;
            3) echo "Restarting Demo bot..."; pkill -f quotex_demo_bot.py; sleep 1; python ~/project_tb/quotex_demo_bot.py & ;;
            4) echo "Checking status..."; ps -ef | grep quotex ;;
            5) bash ~/project_tb/dashboard.sh ;;
            6) bash ~/project_tb/mini_live_stats.sh ;;
            7) echo "Exiting..."; break ;;
        esac
        echo "Press any key to return to menu..."
        read -n 1
    fi
done
#!/bin/bash

while true; do
    clear
    echo "============================"
    echo "     Smart Trading Bot - Menu"
    echo "============================"
    echo "1) Start Main Bot"
    echo "2) Start Backup Bot"
    echo "3) Stop Bot"
    echo "4) Restart Demo"
    echo "5) Status"
    echo "6) Exit"
    echo "----------------------------"
    read -p "Select option [1-6]: " option

    case $option in
        1)
            echo "🚀 Starting Main Bot..."
            python ~/project_tb/main.py
            ;;
        2)
            echo "🛡️ Starting Backup Bot..."
            python ~/project_tb/backup_main.py
            ;;
        3)
            echo "🛑 Stopping bot..."
            pkill -f main.py
            pkill -f backup_main.py
            ;;
        4)
            echo "🔄 Restarting demo..."
            pkill -f main.py
            pkill -f backup_main.py
            python ~/project_tb/main.py
            ;;
        5)
            echo "📊 Active processes:"
            pgrep -af python
            read -p "Press enter to continue..."
            ;;
        6)
            echo "👋 Exiting menu..."
            exit 0
            ;;
        *)
            echo "❌ Invalid option"
            sleep 1
            ;;
    esac
done
